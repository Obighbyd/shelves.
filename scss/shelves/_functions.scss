// Returns the total width (including gutters) of the given
// number of columns. If given a $context, this returns the
// width relative to that number of columns.
//
//   $n       - The number of columns to measure.
//   $context - The number of columns encapsulating the columns.
//              Defaults to the the value of $total.
//   $total   - The total number of columns in the grid.
//              Defaults to the value of $shelves-columns.
//   $gutter  - The width of the gutter in the root context (in %).
//              Defaults to the value of $shelves-gutter.
//
@function column-width($n, $context: $shelves-columns) {
  $n: min(max($n, 1), $context);
  @return percentage($n / $context);
}

// Returns a column selector with the given class name,
// appended with the given index.
//
//   $class-name - The class name to build the selector from.
//                 It should NOT have a preceding ".".
//   $index      - The index to append at the end. It will
//                 be separated by $separator.
//   $separator  - The separator between the class name and index.
//                 Defaults to $shelves-separator.
//
@function column-selector($class-name, $index, $separator: $shelves-separator) {
  @return ".#{$class-name}#{$separator}#{$index}";
}

// Returns a selector that will select all columns with the given prefix.
//
//   $class-name - The class name to build the selector from.
//                 It should NOT have a preceding ".".
//   $separator  - The separator between the class name and index.
//                 Defaults to $shelves-separator.
//
@function columns-selector($class-name, $separator: $shelves-separator) {
  @return "[class*=\"#{$class-name}#{$separator}\"]";
}
