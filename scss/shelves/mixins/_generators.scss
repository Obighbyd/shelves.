// Generates the entire grid, made up of reusable classes for a modular OOCSS
// approach to using the grid. All of the names can be customized.
//
//   $container-name     - Customize the name for the container element.
//                         Defaults to "container".
//   $row-name           - Customize the name for the row element.
//                         Defaults to "row".
//   $column-name        - Customize the name for the columns.
//                         Defaults to "column".
//   $prefix-name        - Customize the name for the prefix modifier.
//                         Defaults to "prefix".
//   $suffix-name        - Customize the name for the suffix modifier.
//                         Defaults to "suffix".
//   $push-name          - Customize the name for the push modifier.
//                         Defaults to "push".
//   $pull-name          - Customize the name for the pull modifier.
//                         Defaults to "pull".
//   $separator          - Customize the seperator used in the names.
//                         Defaults to "-".
//   $mobile-column-name - Customize the name for mobile columns.
//                         Defaults to "mobile-column".
//
@mixin shelves(
  $container-name:     $shelves-container-name,
  $row-name:           $shelves-row-name,
  $column-name:        $shelves-column-name,
  $prefix-name:        $shelves-prefix-name,
  $suffix-name:        $shelves-suffix-name,
  $push-name:          $shelves-push-name,
  $pull-name:          $shelves-pull-name,
  $separator:          $shelves-separator,
  $mobile-column-name: $shelves-mobile-column-name
) {
  
  @include shelves-base(
    $container-name: $container-name,
    $row-name:       $row-name
  );
  
  @include shelves-columns(
    $include-column-gutter: false,
    $column-name:           $column-name,
    $prefix-name:           $prefix-name,
    $suffix-name:           $suffix-name,
    $push-name:             $push-name,
    $pull-name:             $pull-name,
    $separator:             $separator
  );
  
  @for $i from 1 to $shelves-columns - 1  {
    // Loop background through the columns
    // to cascade the nested column properties.
    $i: $shelves-columns - $i;
    
    .#{$column-name}#{$separator}#{$i} {
      @include shelves-columns(
        $start:                 1,
        $end:                   $i,
        $context:               $i,
        $include-column-gutter: true,
        $include-prefix:        true,
        $include-suffix:        true,
        $include-push:          false,
        $include-pull:          false,
        $column-name:           $column-name,
        $prefix-name:           $prefix-name,
        $suffix-name:           $suffix-name,
        $push-name:             $push-name,
        $pull-name:             $pull-name,
        $separator:             $separator
      );
    } 
  }
  
  @media screen and (max-width: 767px) {
    @include shelves-resets(
      $row-name:     $row-name,
      $column-name:  $column-name,
      $separator:    $separator
    );
    
    @include shelves-mobile-columns(
      $column-name:        $column-name,
      $separator:          $separator,
      $mobile-column-name: $mobile-column-name
    );
  }
}

// Generates the grid's base classes, namely the
// the row and container elements.
//
//   $container-name - Customize the name for the container element.
//                     Defaults to "container".
//   $row-name       - Customize the name for the row element.
//                     Defaults to "row".
//   $container-name - Customize the name for the container element.
//                     Defaults to "container".
//   $separator      - Customize the seperator used in the names.
//                     Defaults to "-".
//
@mixin shelves-base(
  $container-name: $shelves-container-name,
  $row-name:       $shelves-row-name,
  $column-name:    $shelves-column-name,
  $separator:      $shelves-separator
) {
  
  .#{$container-name} {
    @include container;
  }
  
  .#{$row-name} {
    @include row($min-width: 767px, $row-name: $row-name);
  }
  
  [class*="#{$column-name}#{$separator}"], {
    @include column-base;
    @include column-gutter($include-first-column: false);
    
    &,
    & [class*="#{$column-name}#{$separator}"] {
      &:first-child {
        @include reset-column-gutter;
      }
    }
  }
}

// Generates the classes used for laying out and modifying
// the columns. This can be used in different contexts, varying
// the number of columns if necessary.
//
//   $column-name - Customize the name for the columns.
//                  Defaults to "column".
//   $prefix-name - Customize the name for the prefix modifier.
//                  Defaults to "prefix".
//   $suffix-name - Customize the name for the suffix modifier.
//                  Defaults to "suffix".
//   $push-name   - Customize the name for the push modifier.
//                  Defaults to "push".
//   $pull-name   - Customize the name for the pull modifier.
//                  Defaults to "pull".
//   $separator   - Customize the seperator used in the names.
//                  Defaults to "-".
//
@mixin shelves-columns(
  $start:                 1,
  $end:                   $shelves-columns,
  $context:               $shelves-columns,
  $include-column-gutter: true,
  $include-prefix:        true,
  $include-suffix:        true,
  $include-push:          true,
  $include-pull:          true,
  $column-name:           $shelves-column-name,
  $prefix-name:           $shelves-prefix-name,
  $suffix-name:           $shelves-suffix-name,
  $push-name:             $shelves-push-name,
  $pull-name:             $shelves-pull-name,
  $separator:             $shelves-separator
) {
  @if $include-column-gutter {
    [class*="#{$column-name}#{$separator}"] {
      @include column-gutter($context, false);
    }
  }

  @for $i from $start to $end  {
    .#{$column-name}#{$separator}#{$i} {
      @include columns-width($i, $context);
    }
  }
    
  @if $include-prefix == true {
    @for $i from $start to $end  {
      .#{$prefix-name}#{$separator}#{$i} {
        @include column-prefix($i, $context);
      }
    }
  }
    
  @if $include-suffix == true {
    @for $i from $start to $end  {
      .#{$suffix-name}#{$separator}#{$i} {
        @include column-suffix($i, $context);
      }
    }
  }
    
  @if $include-push == true {
    @for $i from $start to $end  {
      .#{$push-name}#{$separator}#{$i} {
        @include column-push($i, $context);
      }
    }
  }
    
  @if $include-pull == true {
    @for $i from $start to $end  {
      .#{$pull-name}#{$separator}#{$i} {
        @include column-pull($i, $context);
      }
    }
  }
}

// 
//
//   $row-name    - Customize the name for the row element.
//                  Defaults to "row".
//   $column-name - Customize the name for the columns.
//                  Defaults to "column".
//   $separator   - Customize the seperator used in the names.
//                  Defaults to "-".
//
@mixin shelves-resets(
  $row-name:    $shelves-row-name,
  $column-name: $shelves-column-name,
  $separator:   $shelves-separator
) {
  .#{$row-name} {
    @include reset-row;
  }
  
  [class*="#{$column-name}#{$separator}"] {
    &,
    & [class*="#{$column-name}#{$separator}"] {
      @include reset-column;
    }
  }
}

// Generates the default grid classes for a modular OOCSS
// approach to using the grid. All of the names can be customized.
//
//   $column-name        - Customize the name for the columns.
//                         Defaults to "column".
//   $separator          - Customize the seperator used in the names.
//                         Defaults to "-".
//   $mobile-column-name - Customize the name for mobile columns.
//                         Defaults to "mobile-column".
//
@mixin shelves-mobile-columns(
  $column-name:        $shelves-column-name,
  $separator:          $shelves-separator,
  $mobile-column-name: $shelves-mobile-column-name
) {
  .#{$mobile-column-name}#{$separator}base {
    @include column-base;
    @include column-gutter($include-first-column: false);
  
    &:first-child {
      @include reset-column-gutter;
    }
  }
    
  .#{$mobile-column-name} {
    $mobile-step: floor($shelves-columns / $shelves-mobile-columns);
    $i: $mobile-step;
    
    @while $i < $shelves-columns {
      &.#{$column-name}#{$separator}#{$i} {
        @extend .#{$mobile-column-name}#{$separator}base;
        @include columns-width($i);
      }
      
      $i: $i + $mobile-step;
    }
  }
}
